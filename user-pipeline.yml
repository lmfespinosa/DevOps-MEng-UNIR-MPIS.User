trigger:
- master

pool:
  vmImage: 'windows-latest'
  
variables:
- group: COMMON
- group: TERRAFORM_DEV
  
stages:

- stage: Build
  displayName: Main stage

  jobs:
  - job: Build
    displayName: 'Build, Test & Publish artifacts'

    steps:

    - task: UseDotNet@2
      displayName: 'Use 2.2.203 SDK'
      inputs:
        packageType: 'sdk'
        version: '2.2.203'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: UseDotNet@2
      displayName: 'Use 3.0.0 SDK'
      inputs:
        packageType: 'sdk'
        version: '3.0.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet
        includePreviewVersions: true

    - task: DotNetCoreCLI@2
      displayName: 'Restore'
      inputs:
        command: 'restore'
        vstsFeed: $(FEED)
        projects: '$(System.DefaultWorkingDirectory)/MPIS.User.Function/*.csproj'

    - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      displayName: 'Replace tokens in event-subscriptions.json'
      inputs:
        rootDirectory: '$(System.DefaultWorkingDirectory)/MPIS.User.Function.Integration.Tests'
        targetFiles: 'local.integration.settings.json'
        verbosity: detailed
        tokenPrefix: '__'
        tokenSuffix: '__'

    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: 'build'
        projects: '$(System.DefaultWorkingDirectory)/MPIS.User.Function/*.csproj'
        arguments: '--output $(System.DefaultWorkingDirectory)/publish_output --configuration Release'

    - task: DotNetCoreCLI@2
      displayName: 'Unit Test'
      inputs:
        command: test
        projects: '$(System.DefaultWorkingDirectory)/MPIS.User.Function.Unit.Tests/*.csproj'
        arguments: '--configuration Release'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    # - task: PublishBuildArtifacts@1
    #   displayName: 'Publish artifacts'
    #   inputs:
    #     PathtoPublish: '$(Build.ArtifactStagingDirectory)/Appointment'
    #     ArtifactName: 'drop'
#        publishLocation: 'Container'

    - task: AzureFunctionApp@1
      displayName: 'Deploy Integrations Environment'
      inputs:
        azureSubscription: '$(AZURE_SERVICE_CONNECTION)'
        appType: 'functionApp'
        appName:  '$(FUNCTION_TEST_USER_NAME_DEV)'
        resourceGroupName: '$(RESOURCE_GROUP_DEV)'
        package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        AppSettings: '-AzureSQLConnectionString "$(SQL_SERVER_DATABASE_TEST_USER_CONNECTION_STRING_DEV)" -AzureEventGridClient.TopicKey $(EVENT_GRID_TEST_USER_TOPIC_PRIMARY_KEY_DEV) -EventGridTopicEventPublisher.CheckEventValidity true -EventGridTopicEventPublisher.SubjectBasePath MPIS/User -EventGridTopicEventPublisher.ThrowExceptions true -EventGridTopicEventPublisher.TopicEndPoint $(EVENT_GRID_TEST_USER_TOPIC_ENDPOINT_DEV)'

#    - task: DotNetCoreCLI@2
#      displayName: 'Integrations test'
#      inputs:
#        command: test
#        projects: '$(System.DefaultWorkingDirectory)/MPIS.User.Function.Integration.Tests/*.csproj'
#        arguments: '--configuration Release'

    - task: DotNetCoreCLI@2
      displayName: 'Integration Test'
      inputs:
        command: test
        projects: '$(System.DefaultWorkingDirectory)/MPIS.User.Function.Unit.Tests/*.csproj'
        arguments: '--configuration Release'

    - task: AzureFunctionApp@1
      displayName: 'Deployment environment'
      inputs:
       azureSubscription: '$(AZURE_SERVICE_CONNECTION)'
       appType: 'functionApp'
       appName:  '$(FUNCTION_USER_NAME_DEV)'
       resourceGroupName: '$(RESOURCE_GROUP_DEV)'
       package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
       AppSettings: '-AzureSQLConnectionString "$(SQL_SERVER_DATABASE_USER_CONNECTION_STRING_DEV)" -AzureEventGridClient.TopicKey $(EVENT_GRID_USER_TOPIC_PRIMARY_KEY_DEV) -EventGridTopicEventPublisher.CheckEventValidity true -EventGridTopicEventPublisher.SubjectBasePath MPIS/User -EventGridTopicEventPublisher.ThrowExceptions true -EventGridTopicEventPublisher.TopicEndPoint $(EVENT_GRID_USER_TOPIC_ENDPOINT_DEV)'

    - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      displayName: 'Replace tokens in event-subscriptions.json'
      inputs:
        rootDirectory: '$(System.DefaultWorkingDirectory)/scripts'
        targetFiles: 'event-subscriptions.json'
        verbosity: detailed
        tokenPrefix: '__'
        tokenSuffix: '__'

    - task: AzureCLI@2
      displayName: 'Create Event Grid Subscriptions'
      inputs:
        azureSubscription: '$(AZURE_SERVICE_CONNECTION)'
        scriptType: ps
        scriptPath: '$(System.DefaultWorkingDirectory)/scripts/create-event-subscriptions.ps1'
        workingDirectory: '$(System.DefaultWorkingDirectory)/scripts'